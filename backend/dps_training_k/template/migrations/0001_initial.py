# Generated by Django 5.0.1 on 2024-05-27 15:00

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('TR', 'treatment'), ('EX', 'examination'), ('LA', 'lab'), ('PR', 'production'), ('OT', 'other')], max_length=2)),
                ('application_duration', models.IntegerField(default=10, help_text='Duration in seconds in realtime. Might be scaled by external factors.')),
                ('effect_duration', models.IntegerField(default=None, help_text='Effect duration in seconds in realtime. Might be scaled by external factors.', null=True)),
                ('conditions', models.JSONField(blank=True, default=None, null=True)),
                ('results', models.JSONField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('DE', 'Device'), ('BL', 'Blood')], max_length=2)),
                ('is_reusable', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(help_text='Sensen Code', unique=True)),
                ('personal_details', models.CharField(default='-', max_length=300)),
                ('blood_type', models.CharField(default='-', max_length=1)),
                ('injury', models.CharField(default='-', max_length=300)),
                ('biometrics', models.CharField(default='-', max_length=300)),
                ('triage', models.CharField(choices=[('-', 'Gray'), ('X', 'Black'), ('1', 'Red'), ('2', 'Yellow'), ('3', 'Green')], default='-')),
                ('consecutive_unique_number', models.IntegerField(default=-1)),
                ('mobility', models.CharField(default='-', max_length=100)),
                ('preexisting_illnesses', models.CharField(default='-', max_length=300)),
                ('permanent_medication', models.CharField(default='-', max_length=300)),
                ('current_case_history', models.CharField(default='-', max_length=300)),
                ('pretreatment', models.CharField(default='-', max_length=300)),
                ('start_status', models.IntegerField(default=-1)),
                ('start_location', models.CharField(default='-', max_length=100)),
                ('op', models.CharField(default='-', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='PatientState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(default=0, help_text='Sensen Code')),
                ('state_id', models.IntegerField(default=0, help_text='For Debugging purposes! State number as it is used in original data set')),
                ('vital_signs', models.JSONField(help_text='data for patient in current phase')),
                ('examination_codes', models.JSONField(help_text='List of pairs of examination types and examination codes')),
                ('special_events', models.CharField(blank=True, help_text='Perceivable events of high priority, e.g. "Patient schreit vor Schmerzen"', null=True)),
                ('is_dead', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subcondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('upper_limit', models.IntegerField()),
                ('lower_limit', models.IntegerField()),
                ('fulfilling_measures', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='StateTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_state_transition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='template.statetransition')),
                ('resulting_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='template.patientstate')),
            ],
        ),
        migrations.AddField(
            model_name='patientstate',
            name='transition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='template.statetransition'),
        ),
        migrations.CreateModel(
            name='LogicNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(choices=[('N', 'not'), ('A', 'and'), ('S', 'subcondition'), ('T', 'true')], default='T', max_length=1)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='template.logicnode')),
                ('state_transition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logic_nodes', to='template.statetransition')),
                ('subcondition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logic_nodes', to='template.subcondition')),
            ],
            options={
                'ordering': ['state_transition'],
            },
        ),
        migrations.AddConstraint(
            model_name='patientstate',
            constraint=models.UniqueConstraint(fields=('code', 'state_id'), name='unique_code_stateid'),
        ),
    ]
